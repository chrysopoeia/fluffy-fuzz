import pygame


class EventListener(object):
    def consume(self, events):
        return events


class EventListenerRegistry(object):
    def __init__(self):
        self.__names = dict()
        
    def register(self, name, listener):
        self.__names[name] = listener
        
    def __getattr__(self, name):
        return self.__names[name]
    
    def __iter__(self, *args, **kwargs):
        return self.__names.iteritems()


listeners = EventListenerRegistry()



# SHORTCUTS

def resolve(uncaught_events):
    for name, listener in listeners:
        uncaught_events = listener.consume(uncaught_events)
    
    return uncaught_events


def register(name, listener):
    return listeners.register(name, listener)
